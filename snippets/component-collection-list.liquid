{% comment %}
  Requires:
  -type: {String} - 'collection', 'upsells' 'search', or `blog`.

  Optional:
  -tile-content: {Object} - The content to display in the tile. If not provided, the tile will display the collection
    or search results.

  Example:
  {% render 'component-collection-list', type: 'collection', object: object %}
{% endcomment %}

{% if type == 'collection' %}
  {% assign stuff = collection.products_count %}
{% elsif type == 'search' %}
  {% assign stuff = search.results_count %}
{% endif %}

<div
  {% if type == 'upsells' %}
    class="tile--large card-container__grid card-container__grid--solo"
  {% else %}
    class="card-container__grid"
  {% endif %}
>
  {% if stuff > 0 %}
    <div class="card-container__sort">
      {% render 'component-collection-chips', chip-type: object %}

      <span style="position: relative; place-self: end;">
        {% assign sort_by = object.sort_by | default: object.default_sort_by %}
        <md-icon-button aria-label="Sort" id="sort-button">
          <md-icon style="transform: scaleX(-1)">sort</md-icon>
        </md-icon-button>
        <md-menu id="sort-menu" anchor="sort-button">
          {% for option in object.sort_options %}
            <md-menu-item
              {% if option.value == sort_by %}
                selected="selected"
              {% endif %}
              data-value="{{ option.value }}"
            >
              <div slot="headline">
                {{ option.name }}
              </div>
            </md-menu-item>
          {% endfor %}
        </md-menu>
      </span>
    </div>

    {% if type == 'collection' %}
      {% paginate collection.products by 12 %}
        {% for product in collection.products %}
          {% render 'component-card', product: product %}
        {% endfor %}
        <div class="card-container__pagination">
          {{
            paginate
            | default_pagination:
              next: '<span class="material-symbols-outlined">
            navigate_next
            </span>',
              previous: '<span class="material-symbols-outlined">
                navigate_before
                </span>'
          }}
        </div>
      {% endpaginate %}

    {% elsif type == 'search' %}
      {% paginate search.results by 12 %}
        {% for product in search.results %}
          {% render 'component-card', product: product %}
        {% endfor %}
        <div class="card-container__pagination">
          {{
            paginate
            | default_pagination:
              next: '<span class="material-symbols-outlined">
          navigate_next
          </span>',
              previous: '<span class="material-symbols-outlined">
              navigate_before
              </span>'
          }}
        </div>
      {% endpaginate %}
    {% endif %}
  {% elsif type == 'upsells' %}
    {{ tile-content }}

  {% elsif type == 'collection' and stuff == 0 %}
    <div class="message-container">
      <h2 class="display--medium">A Moment of Pause... No Results Found üåüüîç</h2>
      <p class="body--large" style="margin: auto">
        üîç Looks like your filters have led to a hidden oasis with no results. Let's adjust your search to uncover more
        spa treasures! Clear some filters by clicking on them above or
        <span>
          <a style="color: var(--md-sys-color-primary)" href="{{ collection.url }}?sort_by={{ collection.sort_by }}">
            clear them all
          </a>
        </span>
        to explore a world of relaxation and pampering. Your perfect match is waiting!
      </p>
    </div>
  {% elsif search.performed and stuff == 0 %}
    <div class="message-container">
      <h2 class="display--medium">Still Seeking Serenity? üîçüí´</h2>
      <p class="body--large" style="margin: auto">
        üîç No results found. But don't worry, your perfect match might just be a search away! Try different keywords for
        more spa delights. Let's find what you're looking for! üíÜ‚Äç‚ôÄÔ∏èüåü
      </p>
    </div>
  {% elsif search.performed != true %}
    <div class="message-container">
      <h2 class="display--medium">Begin Your Blissful Search! üîç‚ú®</h2>
      <p class="body--large" style="margin: auto">
        üåü Ready to find your perfect product? üîç Simply type in what your heart desires, then use our filters for a
        tailored search. From blissful treatments to rejuvenating products, your journey to relaxation starts here.
        Let's begin!
      </p>
    </div>
  {% endif %}
</div>

{% style %}
  .card-container__grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(330px, 100%), 1fr));
    gap: var(--spacing-gap-medium);
    padding: var(--spacing-padding-xlarge);
    background: var(--md-sys-color-surface-variant);
    color: var(--md-sys-color-on-surface);
    border-radius: var(--border-radius-xlarge);
    transition: all 0.3s ease;
    flex: 1;

    &.card-container__grid--solo {
      background: var(--md-sys-color-secondary-fixed-dim);
      color: var(--md-sys-color-on-secondary-fixed);
      border-radius: var(--border-radius-large);
      padding: var(--spacing-padding-large);

      & .card {
        background: var(--md-sys-color-secondary-container);
        color: var(--md-sys-color-on-secondary-container);

        & img {
          outline: var(--md-sys-color-secondary-container) solid 0.2rem;
        }

        &:is(h2) {
          display: block;
          background: inherit;
          color: inherit;
          border: inherit;
          min-width: 10ch;
        }

        & md-filled-button {
          --md-filled-button-container-color: var(--md-sys-color-secondary);
          --md-filled-button-label-text-color: var(--md-sys-color-on-secondary);
        }
        & md-filled-icon-button {
          --md-filled-icon-button-container-color: var(--md-sys-color-secondary);
          --md-filled-icon-button-label-text-color: var(--md-sys-color-on-secondary);
        }
      }
    }
  }
  .card-container__sort,
  .card-container__pagination {
    grid-column: 1 / -1;
  }

  .card-container__sort {
    display: grid;
    justify-content: space-between;
    grid-template: auto / 1fr auto;
  }
  .card-container__pagination {
    display: flex;
    justify-content: center;
    gap: var(--spacing-gap-medium);
    font: var(--md-sys-typescale-body-medium);

    & span {
      display: flex;
      align-items: center;
      justify-content: center;
      min-width: 40px;
      height: min(40px, 2.5em);
      border-radius: var(--border-radius-medium);
      transition: all 200ms ease;

      & a {
        padding: var(--spacing-padding-xsmall);
        text-decoration: none;
        color: var(--md-sys-color-on-primary-container);
      }

      &:is(.current) {
        color: var(--md-sys-color-on-primary);
        background: var(--md-sys-color-primary);
      }

      &:hover {
        background: var(--md-sys-color-on-primary);
        color: var(--md-sys-color-primary);
      }
    }
  }

  .message-container {
    width: fit-content;
    margin: auto;

    & h2 {
      margin-block-end: var(--spacing-margin-small);
    }
  }
{% endstyle %}

<script
  type="module"
>
  const sortButton = document.querySelector('#sort-button');
  const sortMenu = document.querySelector('#sort-menu');
  Shopify.queryParams = {};

  // Preserve existing query parameters
  if (location.search.length) {
    var params = location.search.substr(1).split('&');

    for (var i = 0; i < params.length; i++) {
      var keyValue = params[i].split('=');

      if (keyValue.length) {
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

  // Update sort_by query parameter on menu item click
  if (sortMenu) {
    document.querySelectorAll('#sort-menu > *').forEach(function (child) {
      child.addEventListener('click', function (e) {
        var value = e.currentTarget.getAttribute('data-value');

        Shopify.queryParams.sort_by = value;
        location.search = new URLSearchParams(Shopify.queryParams).toString();
      });
    });
  }

  // Connect the sort button to the menu
  if (sortButton && sortMenu) {
    sortButton.addEventListener('click', () => {
      sortMenu.open = !sortMenu.open;
    });
  }
</script>
