{% if type == collection %}
  {% assign stuff = collection.products_count %}
  {% assign stuffs = collection.products %}
{% elsif type == search %}
  {% assign stuff = search.results_count %}
  {% assign stuffs = search.results %}
{% endif %}

<div class="card-container__grid">
  {% if stuff > 0 %}
    <div class="card-container__sort">
      <md-outlined-select id="sort-by">
        {% assign sort_by = type.sort_by | default: type.default_sort_by %}
        {% for option in type.sort_options %}
          <md-select-option
            value="{{ option.value }}"
            {% if option.value == sort_by %}
              selected="selected"
            {% endif %}
          >
            <div slot="headline">
              {{ option.name }}
            </div>
          </md-select-option>
        {% endfor %}
      </md-outlined-select>
    </div>
    {% comment %} TODO: Refactor collection.products and search.results {% endcomment %}
    {% if type == collection %}
      {% paginate collection.products by 12 %}
        {% for product in collection.products %}
          {% render 'component-card', product: product %}
        {% endfor %}
        <div class="card-container__pagination">{{ paginate | default_pagination }}</div>
      {% endpaginate %}

    {% elsif type == search %}
      {% paginate search.results by 12 %}
        {% for product in search.results %}
          {% render 'component-card', product: product %}
        {% endfor %}
        <div class="card-container__pagination">{{ paginate | default_pagination }}</div>
      {% endpaginate %}
    {% endif %}

  {% elsif type == collection and stuff == 0 %}
    <p style="margin: auto">
      üîç Looks like your filters have led to a hidden oasis with no results. Let's adjust your search to uncover more
      spa treasures! Clear some filters by clicking on them above or
      <span>
        <a style="color: var(--md-sys-color-primary)" href="{{ collection.url }}?sort_by={{ collection.sort_by }}">
          clear them all
        </a>
      </span>
      to explore a world of relaxation and pampering. Your perfect match is waiting!
    </p>
  {% elsif search.performed and stuff == 0 %}
    <p style="margin: auto">
      üîç No results found. But don't worry, your perfect match might just be a search away! Try different keywords for
      more spa delights. Let's find what you're looking for! üíÜ‚Äç‚ôÄÔ∏èüåü
    </p>
  {% elsif search.performed != true %}
    <p style="margin: auto">
      üåü Ready to find your perfect product? üîç Simply type in what your heart desires, then use our filters for a
      tailored search. From blissful treatments to rejuvenating products, your journey to relaxation starts here. Let's
      begin!
    </p>
  {% endif %}
</div>

<script type="module">
  Shopify.queryParams = {};

  // Preserve existing query parameters
  if (location.search.length) {
    var params = location.search.substr(1).split('&');

    for (var i = 0; i < params.length; i++) {
      var keyValue = params[i].split('=');

      if (keyValue.length) {
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

  // Update sort_by query parameter on select change
  document.querySelector('#sort-by').addEventListener('change', function (e) {
    var value = e.target.value;

    Shopify.queryParams.sort_by = value;
    location.search = new URLSearchParams(Shopify.queryParams).toString();
  });
</script>

{% style %}
  .card-container__grid {
    padding: var(--spacing-padding-xlarge);
    background: var(--md-sys-color-surface-variant);
    color: var(--md-sys-color-on-surface);
    border-radius: var(--border-radius-xlarge);
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(330px, 1fr));
    gap: var(--spacing-gap-medium);
    flex: 1;

    &.card-container__grid--solo {
      background: var(--md-sys-color-secondary-fixed-dim);
      color: var(--md-sys-color-on-secondary-fixed);
      border-radius: var(--border-radius-large);
      padding: var(--spacing-padding-large);

      & .card {
        background: var(--md-sys-color-secondary-container);
        color: var(--md-sys-color-on-secondary-container);

        & img {
          outline: var(--md-sys-color-secondary-container) solid 0.2rem;
        }

        &:is(h2) {
          display: block;
          background: inherit;
          color: inherit;
          border: inherit;
          min-width: 10ch;
        }

        & md-filled-button {
          --md-filled-button-container-color: var(--md-sys-color-secondary);
          --md-filled-button-label-text-color: var(--md-sys-color-on-secondary);
        }
        & md-filled-icon-button {
          --md-filled-icon-button-container-color: var(--md-sys-color-secondary);
          --md-filled-icon-button-label-text-color: var(--md-sys-color-on-secondary);
        }
      }
    }
  }
  .card-container__sort,
  .card-container__pagination {
    grid-column: 1 / -1;
  }
  .card-container__pagination {
    display: flex;
    justify-content: center;
    gap: var(--spacing-gap-medium);
    font-family: var(--md-sys-typescale-body-font);
    font-size: var(--md-sys-typescale-body-medium-size);
    font-weight: var(--md-sys-typescale-body-medium-weight);

    & span {
      display: flex;
      align-items: center;
      justify-content: center;
      min-width: 40px;
      min-height: 40px;
      border-radius: var(--border-radius-medium);
      transition: all 200ms ease;

      & a {
        padding: var(--spacing-padding-xsmall);
        text-decoration: none;
        color: var(--md-sys-color-on-primary-container);
      }

      &:is(.current) {
        color: var(--md-sys-color-on-primary);
        background: var(--md-sys-color-primary);
      }

      &:hover {
        background: var(--md-sys-color-on-primary);
        color: var(--md-sys-color-primary);
      }
    }
  }
{% endstyle %}
