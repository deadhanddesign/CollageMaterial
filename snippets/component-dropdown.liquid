{% comment %}
  Requires:
    -summary: {Object} Capture of the header text for the Dropdown.
    -contents: {Object} Capture of the contents inside the Dropdown.
    -content-type: {String} Type of content to render. Options are 'filter' or 'default'.

  Example:
    {%  capture foo %}
      <h3>What is a foo?</h3>
    {% endcapture %}
    {%  capture bar %}
      <p>A delicious kind of bar</p>
    {% endcapture %}
    {% render 'component-dropdown', summary: foo, contents: bar, content-type: filter %}
{% endcomment %}

<details>
  <summary>
    {{ summary }}
    <span></span>
  </summary>
</details>
<div class="details">
  {% case content-type %}
    {% when 'filter' %}
      <div class="contents filter__options" data-type="{{- filter-type -}}">{{ contents }}</div>
    {% else %}
      <div class="contents">{{ contents }}</div>
  {% endcase %}
  <md-divider></md-divider>
</div>

{% style %}
  details {
    & summary {
      display: flex;
      align-items: center;
      justify-content: space-between;
      cursor: pointer;
      user-select: none;
      margin-block-start: var(--spacing-margin-medium);
      margin-inline: var(--spacing-margin-medium);
      font: var(--md-sys-typescale-body-xlarge);

      & span::after {
        font-family: 'Material Symbols Outlined';
        content: 'add';
        font-size: var(--md-sys-typescale-body-xlarge-size);
      }
    }

    &:is([open]) > summary > span::after {
      content: 'remove';
    }

    &:is([open]) + .details {
      grid-template-rows: 1fr;
      & .contents {
        padding-block: var(--spacing-padding-medium);
        overflow: auto;
        margin-bottom: var(--spacing-margin-medium);

        &.filter__options:is([data-type='price_range']) {
          overflow-y: hidden;
        }
      }
    }
  }

  .details {
    display: grid;
    grid-template-rows: 0fr;
    transition: grid-template-rows 0.2s ease-out;

    & .contents {
      overflow: hidden;
      padding-inline: var(--spacing-padding-medium);
    }
  }

  .filter__options {
    display: grid;
    grid-template: 1fr / 1fr;
    gap: var(--spacing-gap-xsmall);
    /* padding-block: var(--spacing-padding-small); */
    max-height: 10rem;
    /* margin-bottom: var(--spacing-margin-medium); */

    & md-slider {
      grid-column: 1 / 3;
      --md-slider-label-container-height: 0.5rem;
      --md-slider-label-text-size: 0.75rem;
      --md-slider-label-text-line-height: 1;
    }

    & label {
      display: flex;
      align-items: center;
      justify-content: flex-start;
      gap: var(--spacing-gap-xxsmall);
      font: var(--md-sys-typescale-label-small);
    }
  }

  div {
    overscroll-behavior: contain;

    ::-webkit-scrollbar {
      width: 0.5rem;
      background-color: transparent;
    }

    ::-webkit-scrollbar-track {
      background-color: transparent;
    }

    ::-webkit-scrollbar-thumb {
      border-radius: 10px;
      background-color: var(--md-sys-color-on-surface-variant);
    }
  }
{% endstyle %}
